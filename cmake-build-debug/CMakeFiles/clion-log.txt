C:\Users\yuchengren\.CLion2019.1\system\cygwin_cmake\bin\cmake.exe -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=D:/DevelopTools/cygwin64/bin/make.exe -DCMAKE_C_COMPILER=D:/DevelopTools/cygwin64/bin/gcc.exe -DCMAKE_CXX_COMPILER=D:/DevelopTools/cygwin64/bin/cpp.exe -G "CodeBlocks - Unix Makefiles" /cygdrive/d/ClionProjects/CDemo
-- The C compiler identification is GNU 7.4.0
CMake Warning at /cygdrive/c/Users/yuchengren/.CLion2019.1/system/cygwin_cmake/share/cmake-3.14.3/Modules/Platform/CYGWIN.cmake:15 (message):
  CMake no longer defines WIN32 on Cygwin!

  (1) If you are just trying to build this project, ignore this warning or
  quiet it by setting CMAKE_LEGACY_CYGWIN_WIN32=0 in your environment or in
  the CMake cache.  If later configuration or build errors occur then this
  project may have been written under the assumption that Cygwin is WIN32.
  In that case, set CMAKE_LEGACY_CYGWIN_WIN32=1 instead.

  (2) If you are developing this project, add the line

    set(CMAKE_LEGACY_CYGWIN_WIN32 0) # Remove when CMake >= 2.8.4 is required

  at the top of your top-level CMakeLists.txt file or set the minimum
  required version of CMake to 2.8.4 or higher.  Then teach your project to
  build on Cygwin without WIN32.
Call Stack (most recent call first):
  /cygdrive/c/Users/yuchengren/.CLion2019.1/system/cygwin_cmake/share/cmake-3.14.3/Modules/CMakeSystemSpecificInformation.cmake:26 (include)
  CMakeLists.txt:2 (project)


-- Check for working C compiler: D:/DevelopTools/cygwin64/bin/gcc.exe
-- Check for working C compiler: D:/DevelopTools/cygwin64/bin/gcc.exe -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    CMAKE_CXX_COMPILER


-- Build files have been written to: /cygdrive/d/ClionProjects/CDemo/cmake-build-debug
